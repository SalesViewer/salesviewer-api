swagger: '2.0'
info:
  version: 1.0.0
  title: SalesViewer API
  description: SalesViewer API is a simple API allowing consumers to sessions and website interactions of their website.
host: api.salesviewer.com
basePath: /
securityDefinitions:
  apiKeyHeader:
    type: apiKey
    description: Authentication for each request with api key in header data.
    name: "X-SV-APIKEY"
    in: header
  apiKeyQuery:
    type: apiKey
    description: Authentication for each request with api key in query.
    name: apiKey
    in: query
schemes:
  - https
consumes:
  - application/json
produces:
  - application/json
tags:
  - name: sessions
    description: Query visitor sessions
    
paths:
  /sessions.json:
    get:
      description: Query visitor sessions based on filter (GET)
      tags:
        - sessions
      operationId: getSessionsJSON
      produces:
        - application/json
      consumes:
        - application/x-www-form-urlencoded
      parameters:
        - name: from
          in: query
          required: false
          default: '-30 days'
          type: string
          description: |
            Starting DateTime (any valid DateTime [e.g. _RFC 3339_ / _ISO 8601_], relative values [`-30 days`] or _UNIX_-Timestamps): 
            * `-1 year`
            * `-30 days` 
            * `now`
            * `2017-02-01`
            * `2017-02-01 22:30:15`
            * `1985-04-12T23:20:50.52Z`
            * `1996-12-19T16:39:57-08:00`
            * `1937-01-01T12:00:27.87+00:20`
        - name: to
          in: query
          required: false
          default: now
          type: string
          description: Ending DateTime (see `from`-paramter)
        - name: timezone
          in: query
          required: false
          default: Europe/Berlin
          type: string
          description: 'Timezone of input and output DateTimes [see List of Timezones](https://www.w3schools.com/php/php_ref_timezones.asp)'
        - name: locale
          in: query
          required: false
          default: de-DE
          type: string
          description: 'A valid linux system locale [see List of Locales](https://docs.moodle.org/dev/Table_of_locales#Table)'
        - name: page
          in: query
          required: false
          default: 1
          type: integer
          format: int32
          description: Selected result page
        - name: pageSize
          in: query
          required: false
          default: 100
          type: integer
          format: int32
          description: Number of entries per page
        - name: includeHidden
          in: query
          required: false
          default: false
          type: boolean
          description: Include frontend-hidden companies
        - name: includeCompany
          in: query
          required: false
          default: true
          type: boolean
          description: Include company-details
        - name: includeCompanySector
          in: query
          required: false
          default: true
          type: boolean
          description: Include company-sector (Note applies only if `includeCompany`-paramter is `true`)
        - name: includeVisits
          in: query
          required: false
          default: true
          type: boolean
          description: Include visits details
        - name: query
          in: query
          description: see `query_payload` for a description and schema of queryable objects
          required: false
          type: string
        - name: query_payload
          in: body
          required: false
          schema: 
            $ref: '#/definitions/SessionQuery'
          description: |
            A SVQL formatted query (__S__ales__V__iewer __Q__uery __L__anguage).
            `SVQL` is an _not that much_-modified version of `RQL` with support of `FIQL`
          
            __Available fields__ (the `SessionQuery` model) are a __superset__ of `Session` model (see model definitions), with dot as field separator (e.g. `sesssion.visits.url`) 
            
            _Basic Syntax documentation_ see * [RQL Standard](https://doc.apsstandard.org/2.1/spec/rql/) * [Persvr/RQL Github](https://github.com/persvr/rql)
            
            __Example(s)__
            
            * Find sessions with a total duration of at least _50 seconds_ 
              and at least _4 page impressions_, order them by session 
              start descending (default)
            `
            session.duration>='00:00:50' & count(session.visits)=4 & sort(-session.startedAt)
            `
            * Find sessions with company marked as favorite which triggered at least one interest, order by company name
            `
            session.company.isFavorite=1 
            & count(session.interests) >1 
            & sort(session.company.name)
            `
            * Find sessions with without a page impression at "/Login", at least 5 page impressions in total and at least session duration more than 30 seconds.
            `
            count(session.visits.url.path = '/Login') < 1 
            & count(session.visits) >= 5 & session.duration > '00:00:30'
            `
            * Find sessions where company sector is _Maschinenbau_ (german for _mechanical engineering_), with duration more than 50 seconds and exactly 3 page impressions.
            `
            like(session.company.sector.name, '%Maschinenbau%') & session.duration >= '00:00:50' & count(session.visits) = 3
            `
            * Find sessions which came where referred by keyword term _salesviewer_
            `
            count( like( session.visits.refererTerm, 'salesviewer')) > 0 
            `
            * Find sessions: ()duration more then 30 seconds or exactly 3 page impressions) and sector contains the word _software_
            `
            (session.duration >= '00:00:30' | count(session.visits) = 3) 
            & like(session.company.sector.name,'%software%')
            `
            _Hint: URL-parameters should be URL-Encoded!_
      responses:
        '200':
          description: sessions response
          schema:
            $ref: '#/definitions/GetSessionsResponse'
        '400':
          description: Bad Request - see Error
          schema:
            $ref: '#/definitions/ErrorResponse'
        '401':
          description: Not authenticated by apiKey as query-parameter or header-value.
        '403':
          description: Authentication wrong or project selection error
        '429':
          description: Rate limiting (see headers)
        default:
          description: see X-Error-Description header or errorDescription in answer
          schema:
            $ref: '#/definitions/ErrorResponse'
      security:
        - apiKeyQuery: []
        - apiKeyHeader: []
    post:
      description: Query visitor sessions based on filter (POST)
      tags:
        - sessions
      operationId: getSessionsPOST
      produces:
        - application/json
      consumes:
        - application/x-www-form-urlencoded
      parameters:
        - name: from
          in: formData
          required: false
          default: '-30 days'
          type: string
          description: |
            Starting DateTime (any valid DateTime [e.g. _RFC 3339_ / _ISO 8601_], relative values [`-30 days`] or _UNIX_-Timestamps): 
            * `-1 year`
            * `-30 days` 
            * `now`
            * `2017-02-01`
            * `2017-02-01 22:30:15`
            * `1985-04-12T23:20:50.52Z`
            * `1996-12-19T16:39:57-08:00`
            * `1937-01-01T12:00:27.87+00:20`
        - name: to
          in: formData
          required: false
          default: now
          type: string
          description: Ending DateTime (see `from`-paramter)
        - name: timezone
          in: formData
          required: false
          default: Europe/Berlin
          type: string
          description: 'Timezone of input and output DateTimes [see List of Timezones](https://www.w3schools.com/php/php_ref_timezones.asp)'
        - name: locale
          in: formData
          required: false
          default: de-DE
          type: string
          description: 'A valid linux system locale [see List of Locales](https://docs.moodle.org/dev/Table_of_locales#Table)'
        - name: page
          in: formData
          required: false
          default: 1
          type: integer
          format: int32
          description: Selected result page
        - name: pageSize
          in: formData
          required: false
          default: 100
          type: integer
          format: int32
          description: Number of entries per page
        - name: includeHidden
          in: formData
          required: false
          default: false
          type: boolean
          description: Include frontend-hidden companies
        - name: includeCompany
          in: formData
          required: false
          default: true
          type: boolean
          description: Include company-details
        - name: includeCompanySector
          in: formData
          required: false
          default: true
          type: boolean
          description: Include company-sector (Note applies only if `includeCompany`-paramter is `true`)
        - name: includeVisits
          in: formData
          required: false
          default: true
          type: boolean
          description: Include visits details
        - name: query
          in: formData
          type: string
          required: false
          description: |
            A SVQL formatted query (__S__ales__V__iewer __Q__uery __L__anguage).
            `SVQL` is an _not that much_-modified version of `RQL` with support of `FIQL`
          
            __Available fields__ (the `SessionQuery` model) are a __superset__ of `Session` model (see model definitions), with dot as field separator (e.g. `sesssion.visits.url`) 
            
            _Basic Syntax documentation_ see * [RQL Standard](https://doc.apsstandard.org/2.1/spec/rql/) * [Persvr/RQL Github](https://github.com/persvr/rql)
            
            __Example(s)__
            
            * Find sessions with a total duration of at least _50 seconds_ 
              and at least _4 page impressions_, order them by session 
              start descending (default)
            `
            session.duration>='00:00:50' & count(session.visits)=4 & sort(-session.startedAt)
            `
            * Find sessions with company marked as favorite which triggered at least one interest, order by company name
            `
            session.company.isFavorite=1 
            & count(session.interests) >1 
            & sort(session.company.name)
            `
            * Find sessions with without a page impression at "/Login", at least 5 page impressions in total and at least session duration more than 30 seconds.
            `
            count(session.visits.url.path = '/Login') < 1 
            & count(session.visits) >= 5 & session.duration > '00:00:30'
            `
            * Find sessions where company sector is _Maschinenbau_ (german for _mechanical engineering_), with duration more than 50 seconds and exactly 3 page impressions.
            `
            like(session.company.sector.name, '%Maschinenbau%') & session.duration >= '00:00:50' & count(session.visits) = 3
            `
            * Find sessions which came where referred by keyword term _salesviewer_
            `
            count( like( session.visits.refererTerm, 'salesviewer')) > 0 
            `
            * Find sessions: ()duration more then 30 seconds or exactly 3 page impressions) and sector contains the word _software_
            `
            (session.duration >= '00:00:30' | count(session.visits) = 3) 
            & like(session.company.sector.name,'%software%')
            `
            _Hint: URL-parameters should be URL-Encoded!_
      responses:
        '200':
          description: sessions response
          schema:
            $ref: '#/definitions/GetSessionsResponse'
        '400':
          description: Bad Request - see Error
          schema:
            $ref: '#/definitions/ErrorResponse'
        '401':
          description: Not authenticated by apiKey as query-parameter or header-value.
        '403':
          description: Authentication wrong or project selection error
        '429':
          description: Rate limiting (see headers)
        default:
          description: see X-Error-Description header or errorDescription in answer
          schema:
            $ref: '#/definitions/ErrorResponse'
      security:
        - apiKeyQuery: []
        - apiKeyHeader: []
definitions:
  # API specific models
  PaginatedResult:
    title: PaginatedResult
    type: object
    description: respresents a generic but paginated result
    properties:
      pagination:
        $ref: '#/definitions/ResultPagination'
    required:
      - pagination
  ErrorResponse:
    title: ErrorResponse
    type: object
    description: generic error response structure
    properties:
      error:
        description: Indicated that it' an error
        type: boolean
      errorDescription:
        description: Error description
        type: string
      errorType:
        description: Error type
        type: string
  ResultPagination:
    type: object
    title: ResultPagination
    description: some metadata for inforamtion about paginated result
    properties:
      total:
        description: Number of total entries
        type: integer
        format: int64
      isFirst:
        description: Current page is first page
        type: boolean
      current:
        description: Current page number (1-based)
        type: integer
        format: int64
      isLast:
        description: Current page is last page
        type: boolean
      pageSize:
        description: Size (=number of entries) of each page
        type: integer
        format: int64
    required:
      - total
      - isFirst
      - current
      - isLast
      - pageSize      
  GetSessionsResponse:
    title: GetSessionsResponse
    type: object
    description: response structure of any `/session.json` query
    properties:
      totals:
        $ref: '#/definitions/GetSessionsResultTotals'
      result:
        description: Array of `SessionPublic` (query results)
        type: array
        items:
          $ref: '#/definitions/SessionPublic'
    required:
      - totals
    allOf:
      - $ref: '#/definitions/PaginatedResult'
  GetSessionsResultTotals:
    type: object
    title: GetSessionsResultTotals
    description: some metadata information of object counts
    properties:
      sessions:
        description: Total number of unique sessions
        type: integer
        format: int64
      companies:
        description: Total number of unique companies
        type: integer
        format: int64
      visits:
        description: Total number of page visits
        type: integer
        format: int64
      interest_visits:
        description: Total number of page visits which triggered interest
        type: integer
        format: int64
      interests:
        description: Total number of interests triggered
        type: integer
        format: int64
    required:
      - sessions
      - companies
      - visits
      - interest_visits
      - interests
  
  # Url model
  Url:
    type: object
    title: Url
    description: URL object (can be implicitly casted to string)
    properties:
      scheme:
        description: protocol scheme (e.g. `http` or `https`)
        type: string
      host:
        description: |
          hostname (e.g. `salesviewer.com`) _Note: `www.salesviwer.com` is an other host than `salesviewer.com`, maybe use `like(host, '%salesviwer.com')`_
        type: string
        format: hostname
      pathQueryFragment:
        description: |
          path, query and fragment of URL, e.g. `/api/?query=test#result`
        type: string
      pathQuery:
        description: |
          path and query of URL, e.g. `/api/?query=test`
        type: string
      path:
        description: |
          path of URL, e.g. `/api/`
        type: string
      queryFragment:
        description: |
          query and fragment of URL, e.g. `query=test#result`
        type: string
      query:
        description: |
          query of URL, e.g. `query=test&foo=baz&utm_source=test&utm_media=online`
        type: string
      fragment:
        description: |
          query and fragment of URL, e.g. `result`
        type: string
    required:
      - scheme
      - host
      - pathQueryFragment
      - pathQuery
      - path
      
  # Session model
  Session:
    type: object
    title: Session
    description: common session object 
    properties:
      guid:
        description: UUID of Session
        type: string
      startedAt:
        description: Session started at (in given timezone)
        type: string
        format: date-time
      lastActivityAt:
        description: Session last activity at (in given timezone)
        type: string
        format: date-time  
      duration:
        description: Duration of session in TIME format (Rfc3339 time components)
        type: string
        format: date-time
      language:
        description: Session language/locale
        type: string
      company:
        $ref: '#/definitions/CompanyPublic'
      visits:
        description: |
          Session visits of this session. 
          NOTE: if `includeVisits`-parameter set to `false`, result won't contain visits field.
        type: array
        items:
          $ref: '#/definitions/SessionVisit'
      interests:
        description: |
          interests triggered by one or more visits in this session
        type: array
        items:
          $ref: '#/definitions/SessionInterest'
    required:
      - guid
      - startedAt
      - lastActivityAt
      - duration
      - language
  SessionQuery:
    type: object
    title: SessionQuery
    description: queryable session object
    allOf: 
      - $ref: '#/definitions/Session'
      - properties:
          date:
            description: alias of `started_at`
            type: string
            format: date-time
          locale:
            description: alias of `language`
            type: string
          userAgent:
            description: clients user agent string
            type: string
          company:
            $ref: '#/definitions/CompanyQuery'
          visits:
            description: |
              Session visits of this session. 
              NOTE: if `includeVisits`-parameter set to `false`, result won't contain visits field.
            type: array
            items:
              $ref: '#/definitions/SessionVisitQuery'
          interests:
            description: |
              interests triggered by one or more visits in this session
            type: array
            items:
              $ref: '#/definitions/SessionInterestQuery'
  SessionPublic:
    title: Session
    type: object
    description: public session object
    allOf:
      - $ref: '#/definitions/Session'
      - properties:
          startedAt_ts_server:
            description: Session started at UNIX-Time
            type: string
            format: date-time
          lastActivityAt_ts_server:
            description: Session last activity at UNIX-Time
            type: string
            format: date-time
          duration_secs:
            description: Duration of session in seconds
            type: integer
            format: int64
          company:
            $ref: '#/definitions/CompanyPublic'
          visits:
            description: |
              Session visits of this session. 
              NOTE: if `includeVisits`-parameter set to `false`, result won't contain visits field.
            type: array
            items:
              $ref: '#/definitions/SessionVisitPublic'
          interests:
            description: |
              interests triggered by one or more visits in this session
            type: array
            items:
              $ref: '#/definitions/SessionInterestPublic'
        required:
          - startedAt_ts_server
          - lastActivityAt_ts_server
          - duration_secs
        
  # Company model
  Company:
    title: Company
    description: common company object
    type: object
    properties:
      id:
        description: ID of company
        type: string
      street:
        description: Street of company
        type: string
      zip:
        description: Zip of company
        type: string
      name:
        description: Name of company
        type: string
      phone:
        description: Phone of company
        type: string
      email:
        description: E-Mail address of company
        type: string
      city:
        description: City of company
        type: string
      url:
        description: "URL of company's website"
        type: string
      countyCode:
        description: Country code in (ISO 3166 Alpha 2) format (e.g. `DE`)
        type: string
      countyCode3:
        description: Country code in (ISO 3166 Alpha 3) format (e.g. `DEU`)
        type: string
      isCustomer:
        description: Indicates if company is marked as customer
        type: boolean
      isFavorite:
        description: Indicates if company is marked as favorite
        type: boolean
      isCompetitor:
        description: Indicates if company is marked as competitor
        type: boolean
      sector:
        $ref: '#/definitions/CompanySector'
    required:
      - id
  CompanyQuery:
    title: CompanyQuery
    type: object
    description: queryable company object
    allOf:
      - $ref: '#/definitions/Company'
      - properties:
          website:
            $ref: '#/definitions/Url'
          url:
            $ref: '#/definitions/Url'
          sector:
            $ref: '#/definitions/CompanySectorQuery'
  CompanyPublic:
    title: CompanyPublic
    type: object
    description: public company object
    allOf:
      - $ref: '#/definitions/Company'
      - properties:
          sector:
            $ref: '#/definitions/CompanySectorPublic'
  
  # CompanySector model
  CompanySector:
    title: CompanySector
    type: object
    description: common company sector object
    properties:
      id:
        description: ID of sector
        type: integer
        format: int64
      name:
        description: Name of sector
        type: string
    required:
      - id
      - name
  CompanySectorQuery:
    title: CompanySectorQuery
    type: object
    description: queryable company sector object
    allOf:
      - $ref: '#/definitions/CompanySector'
  CompanySectorPublic:
    title: CompanySectorPublic
    type: object
    description: public company sector object
    allOf:
      - $ref: '#/definitions/CompanySector'
  
  # SessionVisit model
  SessionVisit:
    type: object
    title: SessionVisit
    description: common session visit object
    properties:
      id:
        description: ID of Session visit
        type: integer
        format: int64
      startedAt:
        description: Session visit started at (in given timezone)
        type: string
        format: date-time
      lastActivityAt:
        description: Session visit last activity at (in given timezone)
        type: string
        format: date-time
      duration:
        description: Duration of session visit in TIME format (Rfc3339 time components)
        type: string
        format: date-time
      duration_secs:
        description: Duration of session visit in seconds
        type: integer
        format: precision
      url:
        description: URL of the session visit
        type: string
      numEvents:
        description: Number of events collected during website session
        type: integer
        format: int64
      referer:
        description: Referer URL of the session visit
        type: string
      refererSource:
        description: Referer parsed `source`-component
        type: string
      refererTerm:
        description: Referer parsed `term`-component
        type: string
      refererMedium:
        description: Referer parsed `medium`-component
        type: string
    required:
      - id
      - startedAt
      - lastActivityAt
      - duration
      - duration_secs
      - url
      - refererMedium
      - numEvents
  SessionVisitQuery:
    title: SessionVisitQuery
    type: object
    description: queryable session visit object
    allOf:
      - $ref: '#/definitions/SessionVisit'
      - properties:
          url:
            $ref: '#/definitions/Url'
          referer:
            $ref: '#/definitions/Url'
  SessionVisitPublic:
    title: SessionVisitPublic
    type: object
    description: public session visit object
    allOf:
      - $ref: '#/definitions/SessionVisit'
      - properties:
          startedAt_ts_server:
            description: Session visit started at UNIX-Time
            type: string
            format: date-time
          lastActivityAt_ts_server:
            description: Session visit last activity at UNIX-Time
            type: string
            format: date-time
        required: 
          - startedAt_ts_server
          - lastActivityAt_ts_server
  # SessionInterest model
  SessionInterest:
    title: SessionInterest
    type: object
    description: common session interest object
    properties:
      id:
        description: ID of interest
        type: integer
        format: int64
      name:
        description: name of interest
        type: string
    required: 
      - id
      - name
  SessionInterestQuery:
    title: SessionInterestQuery
    type: object
    description: querably session interest object
    allOf:
      - $ref: '#/definitions/SessionInterest'
  SessionInterestPublic:
    title: SessionInterestPublic
    type: object
    description: querably session interest object
    allOf:
      - $ref: '#/definitions/SessionInterest'